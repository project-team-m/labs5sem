--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.19
-- Dumped by pg_dump version 10.12 (Ubuntu 10.12-0ubuntu0.18.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: basket_backup(); Type: FUNCTION; Schema: public; Owner: user_1
--

CREATE FUNCTION public.basket_backup() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF (TG_OP = 'DELETE') THEN
        INSERT INTO basket_old SELECT OLD.*, TG_OP, now();
        RETURN OLD;
    ELSIF (TG_OP = 'UPDATE') THEN
        IF (OLD != NEW) THEN
            INSERT INTO basket_old SELECT OLD.*, TG_OP, now();
            RETURN NEW;
        END IF;
    ELSIF (TG_OP = 'INSERT') THEN
        INSERT INTO basket_old SELECT NEW.*, TG_OP, now();
        RETURN NEW;
    END IF;
    RETURN NULL;
END ;
$$;


ALTER FUNCTION public.basket_backup() OWNER TO user_1;

--
-- Name: brands_backup(); Type: FUNCTION; Schema: public; Owner: user_1
--

CREATE FUNCTION public.brands_backup() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF (TG_OP = 'DELETE') THEN
        INSERT INTO brands_old SELECT OLD.*, TG_OP, now();
        RETURN OLD;
    ELSIF (TG_OP = 'UPDATE') THEN
        IF (OLD != NEW) THEN
            INSERT INTO brands_old SELECT OLD.*, TG_OP, now();
            RETURN NEW;
        END IF;
    ELSIF (TG_OP = 'INSERT') THEN
        INSERT INTO brands_old SELECT NEW.*, TG_OP, now();
        RETURN NEW;
    END IF;
    RETURN NULL;
END ;
$$;


ALTER FUNCTION public.brands_backup() OWNER TO user_1;

--
-- Name: clients_backup(); Type: FUNCTION; Schema: public; Owner: user_1
--

CREATE FUNCTION public.clients_backup() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF (TG_OP = 'DELETE') THEN
        INSERT INTO clients_old SELECT OLD.*, TG_OP, now();
        RETURN OLD;
    ELSIF (TG_OP = 'UPDATE') THEN
        IF (OLD != NEW) THEN
            INSERT INTO clients_old SELECT OLD.*, TG_OP, now();
            RETURN NEW;
        END IF;
    ELSIF (TG_OP = 'INSERT') THEN
        INSERT INTO clients_old SELECT NEW.*, TG_OP, now();
        RETURN NEW;
    END IF;
    RETURN NULL;
END ;
$$;


ALTER FUNCTION public.clients_backup() OWNER TO user_1;

--
-- Name: components_backup(); Type: FUNCTION; Schema: public; Owner: user_1
--

CREATE FUNCTION public.components_backup() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF (TG_OP = 'DELETE') THEN
        INSERT INTO components_old SELECT OLD.*, TG_OP, now();
        RETURN OLD;
    ELSIF (TG_OP = 'UPDATE') THEN
        IF (OLD != NEW) THEN
            INSERT INTO components_old SELECT OLD.*, TG_OP, now();
            RETURN NEW;
        END IF;
    ELSIF (TG_OP = 'INSERT') THEN
        INSERT INTO components_old SELECT NEW.*, TG_OP, now();
        RETURN NEW;
    END IF;
    RETURN NULL;
END ;
$$;


ALTER FUNCTION public.components_backup() OWNER TO user_1;

--
-- Name: orders_backup(); Type: FUNCTION; Schema: public; Owner: user_1
--

CREATE FUNCTION public.orders_backup() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF (TG_OP = 'DELETE') THEN
        INSERT INTO orders_old SELECT OLD.*, TG_OP, now();
        RETURN OLD;
    ELSIF (TG_OP = 'UPDATE') THEN
        IF (OLD != NEW) THEN
            INSERT INTO orders_old SELECT OLD.*, TG_OP, now();
            RETURN NEW;
        END IF;
    ELSIF (TG_OP = 'INSERT') THEN
        INSERT INTO orders_old SELECT NEW.*, TG_OP, now();
        RETURN NEW;
    END IF;
    RETURN NULL;
END ;
$$;


ALTER FUNCTION public.orders_backup() OWNER TO user_1;

--
-- Name: positions_backup(); Type: FUNCTION; Schema: public; Owner: user_1
--

CREATE FUNCTION public.positions_backup() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF (TG_OP = 'DELETE') THEN
        INSERT INTO positions_old SELECT OLD.*, TG_OP, now();
        RETURN OLD;
    ELSIF (TG_OP = 'UPDATE') THEN
        IF (OLD != NEW) THEN
            INSERT INTO positions_old SELECT OLD.*, TG_OP, now();
            RETURN NEW;
        END IF;
    ELSIF (TG_OP = 'INSERT') THEN
        INSERT INTO positions_old SELECT NEW.*, TG_OP, now();
        RETURN NEW;
    END IF;
    RETURN NULL;
END ;
$$;


ALTER FUNCTION public.positions_backup() OWNER TO user_1;

--
-- Name: stock_backup(); Type: FUNCTION; Schema: public; Owner: user_1
--

CREATE FUNCTION public.stock_backup() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF (TG_OP = 'DELETE') THEN
        INSERT INTO stock_old SELECT OLD.*, TG_OP, now();
        RETURN OLD;
    ELSIF (TG_OP = 'UPDATE') THEN
        IF (OLD != NEW) THEN
            INSERT INTO stock_old SELECT OLD.*, TG_OP, now();
            RETURN NEW;
        END IF;
    ELSIF (TG_OP = 'INSERT') THEN
        INSERT INTO stock_old SELECT NEW.*, TG_OP, now();
        RETURN NEW;
    END IF;
    RETURN NULL;
END ;
$$;


ALTER FUNCTION public.stock_backup() OWNER TO user_1;

--
-- Name: stocks_backup(); Type: FUNCTION; Schema: public; Owner: user_1
--

CREATE FUNCTION public.stocks_backup() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF (TG_OP = 'DELETE') THEN
        INSERT INTO stocks_old SELECT OLD.*, TG_OP, now();
        RETURN OLD;
    ELSIF (TG_OP = 'UPDATE') THEN
        IF (OLD != NEW) THEN
            INSERT INTO stocks_old SELECT OLD.*, TG_OP, now();
            RETURN NEW;
        END IF;
    ELSIF (TG_OP = 'INSERT') THEN
        INSERT INTO stocks_old SELECT NEW.*, TG_OP, now();
        RETURN NEW;
    END IF;
    RETURN NULL;
END ;
$$;


ALTER FUNCTION public.stocks_backup() OWNER TO user_1;

--
-- Name: workers_backup(); Type: FUNCTION; Schema: public; Owner: user_1
--

CREATE FUNCTION public.workers_backup() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF (TG_OP = 'DELETE') THEN
        INSERT INTO workers_old SELECT OLD.*, TG_OP, now();
        RETURN OLD;
    ELSIF (TG_OP = 'UPDATE') THEN
        IF (OLD != NEW) THEN
            INSERT INTO workers_old SELECT OLD.*, TG_OP, now();
            RETURN NEW;
        END IF;
    ELSIF (TG_OP = 'INSERT') THEN
        INSERT INTO workers_old SELECT NEW.*, TG_OP, now();
        RETURN NEW;
    END IF;
    RETURN NULL;
END ;
$$;


ALTER FUNCTION public.workers_backup() OWNER TO user_1;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: addresses; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.addresses (
    id integer NOT NULL,
    city character varying(30),
    street character varying(30),
    house_number character varying(30),
    apartment character varying(30),
    indexx integer
);


ALTER TABLE public.addresses OWNER TO user_1;

--
-- Name: addresses_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.addresses_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.addresses_id_seq OWNER TO user_1;

--
-- Name: addresses_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.addresses_id_seq OWNED BY public.addresses.id;


--
-- Name: basket; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.basket (
    id integer NOT NULL,
    id_component integer,
    quantity integer,
    id_client integer,
    id_order integer
);


ALTER TABLE public.basket OWNER TO user_1;

--
-- Name: basket_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.basket_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.basket_id_seq OWNER TO user_1;

--
-- Name: basket_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.basket_id_seq OWNED BY public.basket.id;


--
-- Name: basket_old; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.basket_old (
    id integer,
    id_component integer,
    quantity integer,
    id_client integer,
    id_order integer,
    operation character varying,
    date_operation timestamp without time zone DEFAULT now()
);


ALTER TABLE public.basket_old OWNER TO user_1;

--
-- Name: brands; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.brands (
    id integer NOT NULL,
    name character varying(30)
);


ALTER TABLE public.brands OWNER TO user_1;

--
-- Name: brands_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.brands_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.brands_id_seq OWNER TO user_1;

--
-- Name: brands_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.brands_id_seq OWNED BY public.brands.id;


--
-- Name: brands_old; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.brands_old (
    id integer,
    name character varying(30),
    operation character varying,
    date_operation timestamp without time zone DEFAULT now()
);


ALTER TABLE public.brands_old OWNER TO user_1;

--
-- Name: clients; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.clients (
    id integer NOT NULL,
    name character varying(30),
    phone_number character varying(11),
    discount_card character varying(9),
    login character varying(32),
    password character varying(32)
);


ALTER TABLE public.clients OWNER TO user_1;

--
-- Name: clients_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.clients_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.clients_id_seq OWNER TO user_1;

--
-- Name: clients_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.clients_id_seq OWNED BY public.clients.id;


--
-- Name: clients_old; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.clients_old (
    id integer,
    name character varying(30),
    phone_number character varying(11),
    discount_card character varying(9),
    login character varying(32),
    password character varying(32),
    operation character varying,
    date_operation timestamp without time zone DEFAULT now()
);


ALTER TABLE public.clients_old OWNER TO user_1;

--
-- Name: components; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.components (
    id integer NOT NULL,
    name character varying(30),
    purchase_price integer,
    selling_price integer,
    clock integer,
    cores integer,
    threads integer,
    clock_memory integer,
    bus_width integer,
    memory integer,
    timing integer,
    id_brand integer
);


ALTER TABLE public.components OWNER TO user_1;

--
-- Name: components_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.components_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.components_id_seq OWNER TO user_1;

--
-- Name: components_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.components_id_seq OWNED BY public.components.id;


--
-- Name: components_old; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.components_old (
    id integer,
    name character varying(30),
    purchase_price integer,
    selling_price integer,
    clock integer,
    cores integer,
    threads integer,
    clock_memory integer,
    bus_width integer,
    memory integer,
    timing integer,
    id_brand integer,
    operation character varying,
    date_operation timestamp without time zone DEFAULT now()
);


ALTER TABLE public.components_old OWNER TO user_1;

--
-- Name: culture_parameters; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.culture_parameters (
    id integer NOT NULL,
    name_of_culture character varying(10),
    type_of_culture character varying(10)
);


ALTER TABLE public.culture_parameters OWNER TO user_1;

--
-- Name: culture_parameters_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.culture_parameters_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.culture_parameters_id_seq OWNER TO user_1;

--
-- Name: culture_parameters_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.culture_parameters_id_seq OWNED BY public.culture_parameters.id;


--
-- Name: delivery; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.delivery (
    id integer NOT NULL,
    car_make character varying(10),
    car_number character varying(10),
    person_id integer
);


ALTER TABLE public.delivery OWNER TO user_1;

--
-- Name: delivery_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.delivery_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.delivery_id_seq OWNER TO user_1;

--
-- Name: delivery_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.delivery_id_seq OWNED BY public.delivery.id;


--
-- Name: employee; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.employee (
    id integer NOT NULL,
    login character varying(32),
    password character varying(32),
    person_id integer,
    name_position character varying(30)
);


ALTER TABLE public.employee OWNER TO user_1;

--
-- Name: employee_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.employee_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.employee_id_seq OWNER TO user_1;

--
-- Name: employee_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.employee_id_seq OWNED BY public.employee.id;


--
-- Name: gost; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.gost (
    id integer NOT NULL,
    name_gost character varying(20)
);


ALTER TABLE public.gost OWNER TO user_1;

--
-- Name: gost_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.gost_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.gost_id_seq OWNER TO user_1;

--
-- Name: gost_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.gost_id_seq OWNED BY public.gost.id;


--
-- Name: laboratory_analysis; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.laboratory_analysis (
    id integer NOT NULL,
    protein integer,
    gluten integer,
    weediness integer,
    humidity integer,
    final_class character varying(10),
    gost_id integer,
    employee_id integer
);


ALTER TABLE public.laboratory_analysis OWNER TO user_1;

--
-- Name: laboratory_analysis_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.laboratory_analysis_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.laboratory_analysis_id_seq OWNER TO user_1;

--
-- Name: laboratory_analysis_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.laboratory_analysis_id_seq OWNED BY public.laboratory_analysis.id;


--
-- Name: orders; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.orders (
    id integer NOT NULL,
    date_order date,
    id_manager integer,
    discount integer
);


ALTER TABLE public.orders OWNER TO user_1;

--
-- Name: orders_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.orders_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.orders_id_seq OWNER TO user_1;

--
-- Name: orders_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.orders_id_seq OWNED BY public.orders.id;


--
-- Name: orders_old; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.orders_old (
    id integer,
    date_order date,
    id_manager integer,
    discount integer,
    operation character varying,
    date_operation timestamp without time zone DEFAULT now()
);


ALTER TABLE public.orders_old OWNER TO user_1;

--
-- Name: organization; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.organization (
    id integer NOT NULL,
    name_organization character varying(20),
    inn integer,
    ogrn integer,
    addresses_id integer,
    delivery_id integer
);


ALTER TABLE public.organization OWNER TO user_1;

--
-- Name: organization_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.organization_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.organization_id_seq OWNER TO user_1;

--
-- Name: organization_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.organization_id_seq OWNED BY public.organization.id;


--
-- Name: person; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.person (
    id integer NOT NULL,
    surname character varying(30),
    name character varying(30),
    patronymic character varying(30),
    gender character varying(1),
    number_phone character varying(12),
    date_of_birth integer,
    addresses_id integer
);


ALTER TABLE public.person OWNER TO user_1;

--
-- Name: person_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.person_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.person_id_seq OWNER TO user_1;

--
-- Name: person_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.person_id_seq OWNED BY public.person.id;


--
-- Name: positions; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.positions (
    id integer NOT NULL,
    name character varying(30)
);


ALTER TABLE public.positions OWNER TO user_1;

--
-- Name: positions_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.positions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.positions_id_seq OWNER TO user_1;

--
-- Name: positions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.positions_id_seq OWNED BY public.positions.id;


--
-- Name: positions_old; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.positions_old (
    id integer,
    name character varying(30),
    operation character varying,
    date_operation timestamp without time zone DEFAULT now()
);


ALTER TABLE public.positions_old OWNER TO user_1;

--
-- Name: processors; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.processors (
    id integer NOT NULL,
    name character varying(30),
    price integer,
    clock integer,
    cores integer,
    threads integer,
    l1_cache integer,
    l2_cache integer,
    l3_cache integer,
    techprocess integer
);


ALTER TABLE public.processors OWNER TO user_1;

--
-- Name: processors_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.processors_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.processors_id_seq OWNER TO user_1;

--
-- Name: processors_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.processors_id_seq OWNED BY public.processors.id;


--
-- Name: stock; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.stock (
    id integer NOT NULL,
    id_component integer,
    id_stock integer,
    balance integer
);


ALTER TABLE public.stock OWNER TO user_1;

--
-- Name: stock_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.stock_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stock_id_seq OWNER TO user_1;

--
-- Name: stock_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.stock_id_seq OWNED BY public.stock.id;


--
-- Name: stock_old; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.stock_old (
    id integer,
    id_component integer,
    id_stock integer,
    balance integer,
    operation character varying,
    date_operation timestamp without time zone DEFAULT now()
);


ALTER TABLE public.stock_old OWNER TO user_1;

--
-- Name: stocks; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.stocks (
    id integer NOT NULL,
    name character varying(30),
    inn integer,
    ogrn integer,
    address character varying(50),
    date_create date,
    id_storekeeper integer
);


ALTER TABLE public.stocks OWNER TO user_1;

--
-- Name: stocks_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.stocks_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.stocks_id_seq OWNER TO user_1;

--
-- Name: stocks_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.stocks_id_seq OWNED BY public.stocks.id;


--
-- Name: stocks_old; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.stocks_old (
    id integer,
    name character varying(30),
    inn integer,
    ogrn integer,
    address character varying(50),
    date_create date,
    id_storekeeper integer,
    operation character varying,
    date_operation timestamp without time zone DEFAULT now()
);


ALTER TABLE public.stocks_old OWNER TO user_1;

--
-- Name: waybill; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.waybill (
    id integer NOT NULL,
    data date,
    weight integer,
    culture_id integer,
    organization_id integer,
    analysis_id integer
);


ALTER TABLE public.waybill OWNER TO user_1;

--
-- Name: waybill_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.waybill_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.waybill_id_seq OWNER TO user_1;

--
-- Name: waybill_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.waybill_id_seq OWNED BY public.waybill.id;


--
-- Name: workers; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.workers (
    id integer NOT NULL,
    login character varying(32),
    password character varying(32),
    name character varying(30),
    address character varying(50),
    phone_number character varying(11),
    id_position integer,
    email character varying(30),
    date_employment date
);


ALTER TABLE public.workers OWNER TO user_1;

--
-- Name: workers_id_seq; Type: SEQUENCE; Schema: public; Owner: user_1
--

CREATE SEQUENCE public.workers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.workers_id_seq OWNER TO user_1;

--
-- Name: workers_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: user_1
--

ALTER SEQUENCE public.workers_id_seq OWNED BY public.workers.id;


--
-- Name: workers_old; Type: TABLE; Schema: public; Owner: user_1
--

CREATE TABLE public.workers_old (
    id integer,
    login character varying(32),
    password character varying(32),
    name character varying(30),
    address character varying(50),
    phone_number character varying(11),
    id_position integer,
    email character varying(30),
    date_employment date,
    operation character varying,
    date_operation timestamp without time zone DEFAULT now()
);


ALTER TABLE public.workers_old OWNER TO user_1;

--
-- Name: addresses id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.addresses ALTER COLUMN id SET DEFAULT nextval('public.addresses_id_seq'::regclass);


--
-- Name: basket id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.basket ALTER COLUMN id SET DEFAULT nextval('public.basket_id_seq'::regclass);


--
-- Name: brands id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.brands ALTER COLUMN id SET DEFAULT nextval('public.brands_id_seq'::regclass);


--
-- Name: clients id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.clients ALTER COLUMN id SET DEFAULT nextval('public.clients_id_seq'::regclass);


--
-- Name: components id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.components ALTER COLUMN id SET DEFAULT nextval('public.components_id_seq'::regclass);


--
-- Name: culture_parameters id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.culture_parameters ALTER COLUMN id SET DEFAULT nextval('public.culture_parameters_id_seq'::regclass);


--
-- Name: delivery id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.delivery ALTER COLUMN id SET DEFAULT nextval('public.delivery_id_seq'::regclass);


--
-- Name: employee id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.employee ALTER COLUMN id SET DEFAULT nextval('public.employee_id_seq'::regclass);


--
-- Name: gost id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.gost ALTER COLUMN id SET DEFAULT nextval('public.gost_id_seq'::regclass);


--
-- Name: laboratory_analysis id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.laboratory_analysis ALTER COLUMN id SET DEFAULT nextval('public.laboratory_analysis_id_seq'::regclass);


--
-- Name: orders id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.orders ALTER COLUMN id SET DEFAULT nextval('public.orders_id_seq'::regclass);


--
-- Name: organization id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.organization ALTER COLUMN id SET DEFAULT nextval('public.organization_id_seq'::regclass);


--
-- Name: person id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.person ALTER COLUMN id SET DEFAULT nextval('public.person_id_seq'::regclass);


--
-- Name: positions id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.positions ALTER COLUMN id SET DEFAULT nextval('public.positions_id_seq'::regclass);


--
-- Name: processors id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.processors ALTER COLUMN id SET DEFAULT nextval('public.processors_id_seq'::regclass);


--
-- Name: stock id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.stock ALTER COLUMN id SET DEFAULT nextval('public.stock_id_seq'::regclass);


--
-- Name: stocks id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.stocks ALTER COLUMN id SET DEFAULT nextval('public.stocks_id_seq'::regclass);


--
-- Name: waybill id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.waybill ALTER COLUMN id SET DEFAULT nextval('public.waybill_id_seq'::regclass);


--
-- Name: workers id; Type: DEFAULT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.workers ALTER COLUMN id SET DEFAULT nextval('public.workers_id_seq'::regclass);


--
-- Data for Name: addresses; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.addresses (id, city, street, house_number, apartment, indexx) FROM stdin;
\.


--
-- Data for Name: basket; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.basket (id, id_component, quantity, id_client, id_order) FROM stdin;
2	12	1	4	2
3	9	2	3	3
4	6	6	1	1
5	5	1	3	2
6	4	2	3	1
7	11	1	3	3
8	5	4	4	3
\.


--
-- Data for Name: basket_old; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.basket_old (id, id_component, quantity, id_client, id_order, operation, date_operation) FROM stdin;
1	1	3	1	1	INSERT	2019-12-19 13:27:34.264588
2	12	1	4	2	INSERT	2019-12-19 13:27:34.264588
3	9	2	3	3	INSERT	2019-12-19 13:27:34.264588
4	6	6	1	1	INSERT	2019-12-19 13:27:34.264588
5	5	1	3	2	INSERT	2019-12-19 13:27:34.264588
6	4	2	3	1	INSERT	2019-12-19 13:27:34.264588
7	11	1	3	3	INSERT	2019-12-19 13:27:34.264588
8	5	4	4	3	INSERT	2019-12-19 13:27:34.264588
9	1	6	3	3	INSERT	2019-12-19 13:27:34.264588
1	1	3	1	1	DELETE	2019-12-19 13:30:12.969118
9	1	6	3	3	DELETE	2019-12-19 13:30:12.969118
\.


--
-- Data for Name: brands; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.brands (id, name) FROM stdin;
1	ASUS
2	CORSAIR
3	GIGABYTE
4	AMD
5	intel
6	Palit
\.


--
-- Data for Name: brands_old; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.brands_old (id, name, operation, date_operation) FROM stdin;
1	ASUS	INSERT	2019-12-19 13:27:30.051203
2	CORSAIR	INSERT	2019-12-19 13:27:30.051203
3	GIGABYTE	INSERT	2019-12-19 13:27:30.051203
4	AMD	INSERT	2019-12-19 13:27:30.051203
5	intel	INSERT	2019-12-19 13:27:30.051203
6	Palit	INSERT	2019-12-19 13:27:30.051203
\.


--
-- Data for Name: clients; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.clients (id, name, phone_number, discount_card, login, password) FROM stdin;
1	Petya	89999999999	197543854	petya	pass
2	Nastya	88888888888	564897132	nastya	pass
3	Yana	87777777777	897157354	yana	pass
4	Gosha	86666666666	897615449	gosha	pass
\.


--
-- Data for Name: clients_old; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.clients_old (id, name, phone_number, discount_card, login, password, operation, date_operation) FROM stdin;
1	Petya	89999999999	197543854	petya	pass	INSERT	2019-12-19 13:27:30.488465
2	Nastya	88888888888	564897132	nastya	pass	INSERT	2019-12-19 13:27:30.488465
3	Yana	87777777777	897157354	yana	pass	INSERT	2019-12-19 13:27:30.488465
4	Gosha	86666666666	897615449	gosha	pass	INSERT	2019-12-19 13:27:30.488465
\.


--
-- Data for Name: components; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.components (id, name, purchase_price, selling_price, clock, cores, threads, clock_memory, bus_width, memory, timing, id_brand) FROM stdin;
2	Corsair CMK8GX4M2B3200C16	5947	4870	\N	\N	\N	\N	\N	8192	16	2
3	GeForce GTX 1060	17170	14381	1582	\N	\N	8008	192	6144	\N	3
4	Ryzen 5 3600X	14920	11456	3800	6	12	\N	\N	\N	\N	4
5	Core i9-9900K Coffee Lake	34500	27438	3600	8	16	\N	\N	\N	\N	5
7	GeForce GTX 1070	25390	23468	1582	\N	\N	8008	256	8192	\N	3
8	Ryzen 5 2600 Pinnacle Ridge	8080	7500	3400	6	12	\N	\N	\N	\N	4
9	Corsair CMW16GX4M2C3000C15	6983	5947	\N	\N	\N	\N	\N	16384	15	2
10	GeForce GTX 1050 Ti	9230	8900	1341	\N	\N	7008	192	4096	\N	1
11	Core i7-6700K Skylake	18770	16230	4000	4	8	\N	\N	\N	\N	5
12	GeForce RTX 2080 SUPER	53935	49578	1830	\N	\N	15500	256	8192	\N	3
6	GeForce RTX 2080 Ti	77675	5478	2130	\N	\N	1350	352	11264	\N	6
\.


--
-- Data for Name: components_old; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.components_old (id, name, purchase_price, selling_price, clock, cores, threads, clock_memory, bus_width, memory, timing, id_brand, operation, date_operation) FROM stdin;
1	Radeon RX Vega 56	24226	18390	1297	\N	\N	1600	2048	8192	\N	1	INSERT	2019-12-19 13:27:30.965169
2	Corsair CMK8GX4M2B3200C16	5947	4870	\N	\N	\N	\N	\N	8192	16	2	INSERT	2019-12-19 13:27:30.965169
3	GeForce GTX 1060	17170	14381	1582	\N	\N	8008	192	6144	\N	3	INSERT	2019-12-19 13:27:30.965169
4	Ryzen 5 3600X	14920	11456	3800	6	12	\N	\N	\N	\N	4	INSERT	2019-12-19 13:27:30.965169
5	Core i9-9900K Coffee Lake	34500	27438	3600	8	16	\N	\N	\N	\N	5	INSERT	2019-12-19 13:27:30.965169
6	GeForce RTX 2080 Ti	77675	54786	2130	\N	\N	1350	352	11264	\N	6	INSERT	2019-12-19 13:27:30.965169
7	GeForce GTX 1070	25390	23468	1582	\N	\N	8008	256	8192	\N	3	INSERT	2019-12-19 13:27:30.965169
8	Ryzen 5 2600 Pinnacle Ridge	8080	7500	3400	6	12	\N	\N	\N	\N	4	INSERT	2019-12-19 13:27:30.965169
9	Corsair CMW16GX4M2C3000C15	6983	5947	\N	\N	\N	\N	\N	16384	15	2	INSERT	2019-12-19 13:27:30.965169
10	GeForce GTX 1050 Ti	9230	8900	1341	\N	\N	7008	192	4096	\N	1	INSERT	2019-12-19 13:27:30.965169
11	Core i7-6700K Skylake	18770	16230	4000	4	8	\N	\N	\N	\N	5	INSERT	2019-12-19 13:27:30.965169
12	GeForce RTX 2080 SUPER	53935	49578	1830	\N	\N	15500	256	8192	\N	3	INSERT	2019-12-19 13:27:30.965169
1	Radeon RX Vega 56	24226	18390	1297	\N	\N	1600	2048	8192	\N	1	DELETE	2019-12-19 13:30:12.969118
6	GeForce RTX 2080 Ti	77675	54786	2130	\N	\N	1350	352	11264	\N	6	UPDATE	2019-12-19 13:30:20.912638
\.


--
-- Data for Name: culture_parameters; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.culture_parameters (id, name_of_culture, type_of_culture) FROM stdin;
\.


--
-- Data for Name: delivery; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.delivery (id, car_make, car_number, person_id) FROM stdin;
\.


--
-- Data for Name: employee; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.employee (id, login, password, person_id, name_position) FROM stdin;
\.


--
-- Data for Name: gost; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.gost (id, name_gost) FROM stdin;
\.


--
-- Data for Name: laboratory_analysis; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.laboratory_analysis (id, protein, gluten, weediness, humidity, final_class, gost_id, employee_id) FROM stdin;
\.


--
-- Data for Name: orders; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.orders (id, date_order, id_manager, discount) FROM stdin;
1	2006-05-14	1	5
2	2007-02-01	1	15
3	2005-06-08	1	0
\.


--
-- Data for Name: orders_old; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.orders_old (id, date_order, id_manager, discount, operation, date_operation) FROM stdin;
1	2006-05-14	1	5	INSERT	2019-12-19 13:27:33.212947
2	2007-02-01	1	15	INSERT	2019-12-19 13:27:33.212947
3	2005-06-08	1	0	INSERT	2019-12-19 13:27:33.212947
\.


--
-- Data for Name: organization; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.organization (id, name_organization, inn, ogrn, addresses_id, delivery_id) FROM stdin;
\.


--
-- Data for Name: person; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.person (id, surname, name, patronymic, gender, number_phone, date_of_birth, addresses_id) FROM stdin;
\.


--
-- Data for Name: positions; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.positions (id, name) FROM stdin;
1	manager
2	storekeeper
3	director
\.


--
-- Data for Name: positions_old; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.positions_old (id, name, operation, date_operation) FROM stdin;
1	manager	INSERT	2019-12-19 13:27:31.416189
2	storekeeper	INSERT	2019-12-19 13:27:31.416189
3	director	INSERT	2019-12-19 13:27:31.416189
\.


--
-- Data for Name: processors; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.processors (id, name, price, clock, cores, threads, l1_cache, l2_cache, l3_cache, techprocess) FROM stdin;
\.


--
-- Data for Name: stock; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.stock (id, id_component, id_stock, balance) FROM stdin;
2	2	1	6
3	5	1	2
5	3	1	15
6	7	1	5
7	9	1	23
8	6	1	56
9	3	2	1
10	6	2	2
11	12	1	8
12	11	1	7
13	9	2	1
14	5	2	9
15	7	2	123
16	10	1	65
17	12	2	85
18	4	2	3
\.


--
-- Data for Name: stock_old; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.stock_old (id, id_component, id_stock, balance, operation, date_operation) FROM stdin;
1	1	1	12	INSERT	2019-12-19 13:27:32.739939
2	2	1	6	INSERT	2019-12-19 13:27:32.739939
3	5	1	2	INSERT	2019-12-19 13:27:32.739939
4	1	2	8	INSERT	2019-12-19 13:27:32.739939
5	3	1	15	INSERT	2019-12-19 13:27:32.739939
6	7	1	5	INSERT	2019-12-19 13:27:32.739939
7	9	1	23	INSERT	2019-12-19 13:27:32.739939
8	6	1	56	INSERT	2019-12-19 13:27:32.739939
9	3	2	1	INSERT	2019-12-19 13:27:32.739939
10	6	2	2	INSERT	2019-12-19 13:27:32.739939
11	12	1	8	INSERT	2019-12-19 13:27:32.739939
12	11	1	7	INSERT	2019-12-19 13:27:32.739939
13	9	2	1	INSERT	2019-12-19 13:27:32.739939
14	5	2	9	INSERT	2019-12-19 13:27:32.739939
15	7	2	123	INSERT	2019-12-19 13:27:32.739939
16	10	1	65	INSERT	2019-12-19 13:27:32.739939
17	12	2	85	INSERT	2019-12-19 13:27:32.739939
18	4	2	3	INSERT	2019-12-19 13:27:32.739939
1	1	1	12	DELETE	2019-12-19 13:30:12.969118
4	1	2	8	DELETE	2019-12-19 13:30:12.969118
\.


--
-- Data for Name: stocks; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.stocks (id, name, inn, ogrn, address, date_create, id_storekeeper) FROM stdin;
1	first stock	123	456	gtr 6	2005-12-01	1
2	second stock	214	852	gtr 5	2005-12-03	2
\.


--
-- Data for Name: stocks_old; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.stocks_old (id, name, inn, ogrn, address, date_create, id_storekeeper, operation, date_operation) FROM stdin;
1	first stock	123	456	gtr 6	2005-12-01	1	INSERT	2019-12-19 13:27:32.320156
2	second stock	214	852	gtr 5	2005-12-03	2	INSERT	2019-12-19 13:27:32.320156
\.


--
-- Data for Name: waybill; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.waybill (id, data, weight, culture_id, organization_id, analysis_id) FROM stdin;
\.


--
-- Data for Name: workers; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.workers (id, login, password, name, address, phone_number, id_position, email, date_employment) FROM stdin;
1	evgeniya	evgeniya	Evgeniya	kash 2	89854785442	1	aaa@aaa.a	2005-01-12
2	anatoly	anatoly	Anatoly	hgw 7	89547831456	2	ccc@ccc.c	2004-12-27
3	segrey	segrey	Segrey	adrg 56	89547831868	2	bbb@bbb.b	2004-12-26
4	admin	admin	Genady	prd 72	89546435468	3	eee@eee.e	2004-09-01
\.


--
-- Data for Name: workers_old; Type: TABLE DATA; Schema: public; Owner: user_1
--

COPY public.workers_old (id, login, password, name, address, phone_number, id_position, email, date_employment, operation, date_operation) FROM stdin;
1	evgeniya	evgeniya	Evgeniya	kash 2	89854785442	1	aaa@aaa.a	2005-01-12	INSERT	2019-12-19 13:27:31.83452
2	anatoly	anatoly	Anatoly	hgw 7	89547831456	2	ccc@ccc.c	2004-12-27	INSERT	2019-12-19 13:27:31.83452
3	segrey	segrey	Segrey	adrg 56	89547831868	2	bbb@bbb.b	2004-12-26	INSERT	2019-12-19 13:27:31.83452
4	admin	admin	Genady	prd 72	89546435468	3	eee@eee.e	2004-09-01	INSERT	2019-12-19 13:27:31.83452
\.


--
-- Name: addresses_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.addresses_id_seq', 1, false);


--
-- Name: basket_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.basket_id_seq', 9, true);


--
-- Name: brands_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.brands_id_seq', 6, true);


--
-- Name: clients_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.clients_id_seq', 4, true);


--
-- Name: components_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.components_id_seq', 12, true);


--
-- Name: culture_parameters_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.culture_parameters_id_seq', 1, false);


--
-- Name: delivery_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.delivery_id_seq', 1, false);


--
-- Name: employee_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.employee_id_seq', 1, false);


--
-- Name: gost_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.gost_id_seq', 1, false);


--
-- Name: laboratory_analysis_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.laboratory_analysis_id_seq', 1, false);


--
-- Name: orders_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.orders_id_seq', 3, true);


--
-- Name: organization_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.organization_id_seq', 1, false);


--
-- Name: person_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.person_id_seq', 1, false);


--
-- Name: positions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.positions_id_seq', 3, true);


--
-- Name: processors_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.processors_id_seq', 1, false);


--
-- Name: stock_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.stock_id_seq', 18, true);


--
-- Name: stocks_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.stocks_id_seq', 2, true);


--
-- Name: waybill_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.waybill_id_seq', 1, false);


--
-- Name: workers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: user_1
--

SELECT pg_catalog.setval('public.workers_id_seq', 4, true);


--
-- Name: addresses addresses_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.addresses
    ADD CONSTRAINT addresses_pkey PRIMARY KEY (id);


--
-- Name: basket basket_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.basket
    ADD CONSTRAINT basket_pkey PRIMARY KEY (id);


--
-- Name: brands brands_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.brands
    ADD CONSTRAINT brands_pkey PRIMARY KEY (id);


--
-- Name: clients clients_login_key; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.clients
    ADD CONSTRAINT clients_login_key UNIQUE (login);


--
-- Name: clients clients_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.clients
    ADD CONSTRAINT clients_pkey PRIMARY KEY (id);


--
-- Name: components components_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.components
    ADD CONSTRAINT components_pkey PRIMARY KEY (id);


--
-- Name: culture_parameters culture_parameters_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.culture_parameters
    ADD CONSTRAINT culture_parameters_pkey PRIMARY KEY (id);


--
-- Name: delivery delivery_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.delivery
    ADD CONSTRAINT delivery_pkey PRIMARY KEY (id);


--
-- Name: employee employee_login_key; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.employee
    ADD CONSTRAINT employee_login_key UNIQUE (login);


--
-- Name: employee employee_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.employee
    ADD CONSTRAINT employee_pkey PRIMARY KEY (id);


--
-- Name: gost gost_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.gost
    ADD CONSTRAINT gost_pkey PRIMARY KEY (id);


--
-- Name: laboratory_analysis laboratory_analysis_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.laboratory_analysis
    ADD CONSTRAINT laboratory_analysis_pkey PRIMARY KEY (id);


--
-- Name: orders orders_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_pkey PRIMARY KEY (id);


--
-- Name: organization organization_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.organization
    ADD CONSTRAINT organization_pkey PRIMARY KEY (id);


--
-- Name: person person_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.person
    ADD CONSTRAINT person_pkey PRIMARY KEY (id);


--
-- Name: positions positions_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.positions
    ADD CONSTRAINT positions_pkey PRIMARY KEY (id);


--
-- Name: processors processors_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.processors
    ADD CONSTRAINT processors_pkey PRIMARY KEY (id);


--
-- Name: stock stock_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.stock
    ADD CONSTRAINT stock_pkey PRIMARY KEY (id);


--
-- Name: stocks stocks_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.stocks
    ADD CONSTRAINT stocks_pkey PRIMARY KEY (id);


--
-- Name: waybill waybill_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.waybill
    ADD CONSTRAINT waybill_pkey PRIMARY KEY (id);


--
-- Name: workers workers_login_key; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.workers
    ADD CONSTRAINT workers_login_key UNIQUE (login);


--
-- Name: workers_old workers_old_login_key; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.workers_old
    ADD CONSTRAINT workers_old_login_key UNIQUE (login);


--
-- Name: workers workers_pkey; Type: CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.workers
    ADD CONSTRAINT workers_pkey PRIMARY KEY (id);


--
-- Name: basket basket; Type: TRIGGER; Schema: public; Owner: user_1
--

CREATE TRIGGER basket AFTER INSERT OR DELETE OR UPDATE ON public.basket FOR EACH ROW EXECUTE PROCEDURE public.basket_backup();


--
-- Name: brands brands; Type: TRIGGER; Schema: public; Owner: user_1
--

CREATE TRIGGER brands AFTER INSERT OR DELETE OR UPDATE ON public.brands FOR EACH ROW EXECUTE PROCEDURE public.brands_backup();


--
-- Name: clients clients; Type: TRIGGER; Schema: public; Owner: user_1
--

CREATE TRIGGER clients AFTER INSERT OR DELETE OR UPDATE ON public.clients FOR EACH ROW EXECUTE PROCEDURE public.clients_backup();


--
-- Name: components components; Type: TRIGGER; Schema: public; Owner: user_1
--

CREATE TRIGGER components AFTER INSERT OR DELETE OR UPDATE ON public.components FOR EACH ROW EXECUTE PROCEDURE public.components_backup();


--
-- Name: orders orders; Type: TRIGGER; Schema: public; Owner: user_1
--

CREATE TRIGGER orders AFTER INSERT OR DELETE OR UPDATE ON public.orders FOR EACH ROW EXECUTE PROCEDURE public.orders_backup();


--
-- Name: positions positions; Type: TRIGGER; Schema: public; Owner: user_1
--

CREATE TRIGGER positions AFTER INSERT OR DELETE OR UPDATE ON public.positions FOR EACH ROW EXECUTE PROCEDURE public.positions_backup();


--
-- Name: stock stock; Type: TRIGGER; Schema: public; Owner: user_1
--

CREATE TRIGGER stock AFTER INSERT OR DELETE OR UPDATE ON public.stock FOR EACH ROW EXECUTE PROCEDURE public.stock_backup();


--
-- Name: stocks stocks; Type: TRIGGER; Schema: public; Owner: user_1
--

CREATE TRIGGER stocks AFTER INSERT OR DELETE OR UPDATE ON public.stocks FOR EACH ROW EXECUTE PROCEDURE public.stocks_backup();


--
-- Name: workers workers; Type: TRIGGER; Schema: public; Owner: user_1
--

CREATE TRIGGER workers AFTER INSERT OR DELETE OR UPDATE ON public.workers FOR EACH ROW EXECUTE PROCEDURE public.workers_backup();


--
-- Name: basket basket_id_client_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.basket
    ADD CONSTRAINT basket_id_client_fkey FOREIGN KEY (id_client) REFERENCES public.clients(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: basket basket_id_component_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.basket
    ADD CONSTRAINT basket_id_component_fkey FOREIGN KEY (id_component) REFERENCES public.components(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: basket basket_id_order_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.basket
    ADD CONSTRAINT basket_id_order_fkey FOREIGN KEY (id_order) REFERENCES public.orders(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: components components_id_brand_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.components
    ADD CONSTRAINT components_id_brand_fkey FOREIGN KEY (id_brand) REFERENCES public.brands(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: delivery delivery_person_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.delivery
    ADD CONSTRAINT delivery_person_id_fkey FOREIGN KEY (person_id) REFERENCES public.person(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: employee employee_person_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.employee
    ADD CONSTRAINT employee_person_id_fkey FOREIGN KEY (person_id) REFERENCES public.person(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: laboratory_analysis laboratory_analysis_employee_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.laboratory_analysis
    ADD CONSTRAINT laboratory_analysis_employee_id_fkey FOREIGN KEY (employee_id) REFERENCES public.employee(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: laboratory_analysis laboratory_analysis_gost_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.laboratory_analysis
    ADD CONSTRAINT laboratory_analysis_gost_id_fkey FOREIGN KEY (gost_id) REFERENCES public.gost(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: orders orders_id_manager_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_id_manager_fkey FOREIGN KEY (id_manager) REFERENCES public.workers(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: organization organization_addresses_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.organization
    ADD CONSTRAINT organization_addresses_id_fkey FOREIGN KEY (addresses_id) REFERENCES public.addresses(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: organization organization_delivery_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.organization
    ADD CONSTRAINT organization_delivery_id_fkey FOREIGN KEY (delivery_id) REFERENCES public.delivery(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: person person_addresses_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.person
    ADD CONSTRAINT person_addresses_id_fkey FOREIGN KEY (addresses_id) REFERENCES public.addresses(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: stock stock_id_component_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.stock
    ADD CONSTRAINT stock_id_component_fkey FOREIGN KEY (id_component) REFERENCES public.components(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: stock stock_id_stock_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.stock
    ADD CONSTRAINT stock_id_stock_fkey FOREIGN KEY (id_stock) REFERENCES public.stocks(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: stocks stocks_id_storekeeper_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.stocks
    ADD CONSTRAINT stocks_id_storekeeper_fkey FOREIGN KEY (id_storekeeper) REFERENCES public.workers(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: waybill waybill_analysis_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.waybill
    ADD CONSTRAINT waybill_analysis_id_fkey FOREIGN KEY (analysis_id) REFERENCES public.laboratory_analysis(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: waybill waybill_culture_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.waybill
    ADD CONSTRAINT waybill_culture_id_fkey FOREIGN KEY (culture_id) REFERENCES public.culture_parameters(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: waybill waybill_organization_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.waybill
    ADD CONSTRAINT waybill_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organization(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: workers workers_id_position_fkey; Type: FK CONSTRAINT; Schema: public; Owner: user_1
--

ALTER TABLE ONLY public.workers
    ADD CONSTRAINT workers_id_position_fkey FOREIGN KEY (id_position) REFERENCES public.positions(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

